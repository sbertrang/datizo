
# SUPPORTED

## W3CDTF

Examples:

 * 2003-02-15T13:50:05-05:00

Libararies:

 - DateTime::Format::W3CDTF

   This module understands the W3CDTF date/time format, an ISO 8601 profile,
   defined at http://www.w3.org/TR/NOTE-datetime. This format as the native date
   format of RSS 1.0.

## ICal

Examples:

 * 20030117T032900Z

Libraries:

 - DateTime::Format::ICal

   This module understands the ICal date/time and duration formats, as defined
   in RFC 2445.

## Sybase

Examples:

 * 2004-08-21 14:36:48.080

 - DateTime::Format::Sybase

   Parse and format Sybase datetimes

## ISO8601

Examples:

 * 1985-04-12T10:15:30.5
 * 19850412T101530Z

Libraries:

 - DateTime::Format::ISO8601

   Parses almost all ISO8601 date and time formats. ISO8601 time-intervals will
   be supported in a later release.

## SQLite

Examples:

 * 2003-01-16 23:12:01

Libraries:

 - DateTime::Format::SQLite

   This module understands the formats used by SQLite for its date, datetime and
   time functions.

## RFC3501

Examples:

 *  1-Jul-2002 13:50:05 +0200

Libraries:

 - DateTime::Format::RFC3501

   This module understands the RFC3501 date-time format, defined at
   http://tools.ietf.org/html/rfc3501.


## Mail

Examples:

 * Sat, 29 Mar 2003 22:11:18 -0800
 * 17 Oct 02 22:33:34 -0000
 * 16 Jan 2003 13:11:15 PST
 * 06-Mar-2003 09:03:29 ZE10
 ! Fri, 07 Mar 2003 12:27:15 +1100 (EST)
 * Fri, 10 Jan 2003 08:42:01 US/Central
 * Fri, 14 Feb 2003 15:30 +0000

Libraries:

 - DateTime::Format::Mail

   RFCs 2822 and 822 specify date formats to be used by email. This module
   parses and emits such dates.


## Date::Parse

Examples:

 ! 1995:01:24T09:08:17.1823213
 * 1995-01-24T09:08:17.1823213
 * Wed, 16 Jun 94 07:29:35 CST           Comma and day name are optional 
 * Thu, 13 Oct 94 10:13:13 -0700
 ! Wed, 9 Nov 1994 09:50:32 -0500 (EST)  Text in ()'s will be ignored.
 * 21 dec 17:05                          Will be parsed in the current time zone
 ! 21-dec 17:05
 ! 21/dec 17:05
 * 21/dec/93 17:05
 ! 1999 10:02:18 "GMT"
 * 16 Nov 94 22:28:20 PST 


## RFC3339

Examples:

 * 2002-07-01T13:50:05Z

Libraries:

 - DateTime::Format::RFC3339

   This module understands the RFC3339 date/time format, an ISO 8601 profile,
   defined at http://tools.ietf.org/html/rfc3339.


## Oracle

Examples:

 * 2003-01-16 23:12:01

Libraries:

 - DateTime::Format::Oracle

   This module may be used to convert Oracle date and timestamp values into
   DateTime objects. It also can take a DateTime object and produce a date
   string matching the NLS_DATE_FORMAT.

   Oracle has flexible date formatting via its NLS_DATE_FORMAT session variable.
   Date values will be returned from Oracle according to the current value of
   that variable. Date values going into Oracle must also match the current
   setting of NLS_DATE_FORMAT.


## MySQL
## MSSQL


## HTTP

Examples:

 * Wed, 09 Feb 1994 22:23:32 GMT       -- HTTP format
 * Thu Feb  3 17:03:55 GMT 1994        -- ctime(3) format
 * Thu Feb  3 00:00:00 1994            -- ANSI C asctime() format
 ! Tuesday, 08-Feb-94 14:15:29 GMT     -- old rfc850 HTTP format
 ! Tuesday, 08-Feb-1994 14:15:29 GMT   -- broken rfc850 HTTP format

 * 03/Feb/1994:17:03:55 -0700   -- common logfile format
 * 09 Feb 1994 22:23:32 GMT     -- HTTP format (no weekday)
 * 08-Feb-94 14:15:29 GMT       -- rfc850 format (no weekday)
 * 08-Feb-1994 14:15:29 GMT     -- broken rfc850 format (no weekday)

 * 1994-02-03 14:15:29 -0100    -- ISO 8601 format
 * 1994-02-03 14:15:29          -- zone is optional
 * 1994-02-03                   -- only date
 * 1994-02-03T14:15:29          -- Use T as separator
 * 19940203T141529Z             -- ISO 8601 compact format
 * 19940203                     -- only date

 * 08-Feb-94         -- old rfc850 HTTP format    (no weekday, no time)
 * 08-Feb-1994       -- broken rfc850 HTTP format (no weekday, no time)
 * 09 Feb 1994       -- proposed new HTTP format  (no weekday, no time)
 * 03/Feb/1994       -- common logfile format     (no time, no offset)

 * Feb  3  1994      -- Unix 'ls -l' format
 ! Feb  3 17:03      -- Unix 'ls -l' format

 * 11-15-96  03:52PM -- Windows 'dir' format



# UNSUPPORTED

## Strptime

 - DateTime::Format::Strptime

   This module implements most of strptime(3), the POSIX function that is the
   reverse of strftime(3), for DateTime. While strftime takes a DateTime and a
   pattern and returns a string, strptime takes a string and a pattern and
   returns the DateTime object associated.


